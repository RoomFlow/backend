// Code generated by go-swagger; DO NOT EDIT.

package register

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/RoomFlow/backend/services/apigateway/models"
)

// PostRegisterOKCode is the HTTP code returned for type PostRegisterOK
const PostRegisterOKCode int = 200

/*PostRegisterOK registration successful

swagger:response postRegisterOK
*/
type PostRegisterOK struct {

	/*
	  In: Body
	*/
	Payload *models.Token `json:"body,omitempty"`
}

// NewPostRegisterOK creates PostRegisterOK with default headers values
func NewPostRegisterOK() *PostRegisterOK {

	return &PostRegisterOK{}
}

// WithPayload adds the payload to the post register o k response
func (o *PostRegisterOK) WithPayload(payload *models.Token) *PostRegisterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register o k response
func (o *PostRegisterOK) SetPayload(payload *models.Token) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostRegisterDefault error

swagger:response postRegisterDefault
*/
type PostRegisterDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostRegisterDefault creates PostRegisterDefault with default headers values
func NewPostRegisterDefault(code int) *PostRegisterDefault {
	if code <= 0 {
		code = 500
	}

	return &PostRegisterDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post register default response
func (o *PostRegisterDefault) WithStatusCode(code int) *PostRegisterDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post register default response
func (o *PostRegisterDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post register default response
func (o *PostRegisterDefault) WithPayload(payload *models.Error) *PostRegisterDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register default response
func (o *PostRegisterDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
