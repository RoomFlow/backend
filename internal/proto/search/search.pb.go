// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package search

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Comparison int32

const (
	Comparison_LESS_THAN             Comparison = 0
	Comparison_LESS_THAN_EQUAL_TO    Comparison = 1
	Comparison_EQUAL_TO              Comparison = 2
	Comparison_GREATER_THAN_EQUAL_TO Comparison = 3
	Comparison_GREATER_THAN          Comparison = 4
)

var Comparison_name = map[int32]string{
	0: "LESS_THAN",
	1: "LESS_THAN_EQUAL_TO",
	2: "EQUAL_TO",
	3: "GREATER_THAN_EQUAL_TO",
	4: "GREATER_THAN",
}

var Comparison_value = map[string]int32{
	"LESS_THAN":             0,
	"LESS_THAN_EQUAL_TO":    1,
	"EQUAL_TO":              2,
	"GREATER_THAN_EQUAL_TO": 3,
	"GREATER_THAN":          4,
}

func (x Comparison) String() string {
	return proto.EnumName(Comparison_name, int32(x))
}

func (Comparison) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

type RoomType int32

const (
	RoomType_ANY                       RoomType = 0
	RoomType_CLASSROOM                 RoomType = 1
	RoomType_LECTURE_THEATRE           RoomType = 2
	RoomType_DEPARTMENTAL_ROOM         RoomType = 3
	RoomType_DEPARTMENTAL_LAB          RoomType = 4
	RoomType_ACTIVE_LEARNING_CLASSROOM RoomType = 5
	RoomType_TESTING_CENTRE            RoomType = 6
)

var RoomType_name = map[int32]string{
	0: "ANY",
	1: "CLASSROOM",
	2: "LECTURE_THEATRE",
	3: "DEPARTMENTAL_ROOM",
	4: "DEPARTMENTAL_LAB",
	5: "ACTIVE_LEARNING_CLASSROOM",
	6: "TESTING_CENTRE",
}

var RoomType_value = map[string]int32{
	"ANY":                       0,
	"CLASSROOM":                 1,
	"LECTURE_THEATRE":           2,
	"DEPARTMENTAL_ROOM":         3,
	"DEPARTMENTAL_LAB":          4,
	"ACTIVE_LEARNING_CLASSROOM": 5,
	"TESTING_CENTRE":            6,
}

func (x RoomType) String() string {
	return proto.EnumName(RoomType_name, int32(x))
}

func (RoomType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

type FilterSearchRequest struct {
	Filter               *Filter  `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterSearchRequest) Reset()         { *m = FilterSearchRequest{} }
func (m *FilterSearchRequest) String() string { return proto.CompactTextString(m) }
func (*FilterSearchRequest) ProtoMessage()    {}
func (*FilterSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

func (m *FilterSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterSearchRequest.Unmarshal(m, b)
}
func (m *FilterSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterSearchRequest.Marshal(b, m, deterministic)
}
func (m *FilterSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterSearchRequest.Merge(m, src)
}
func (m *FilterSearchRequest) XXX_Size() int {
	return xxx_messageInfo_FilterSearchRequest.Size(m)
}
func (m *FilterSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilterSearchRequest proto.InternalMessageInfo

func (m *FilterSearchRequest) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type Filter struct {
	Capacity             *Capacity `protobuf:"bytes,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	RoomType             RoomType  `protobuf:"varint,2,opt,name=roomType,proto3,enum=search.RoomType" json:"roomType,omitempty"`
	Wheelchair           bool      `protobuf:"varint,3,opt,name=wheelchair,proto3" json:"wheelchair,omitempty"`
	Windows              bool      `protobuf:"varint,4,opt,name=windows,proto3" json:"windows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetCapacity() *Capacity {
	if m != nil {
		return m.Capacity
	}
	return nil
}

func (m *Filter) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_ANY
}

func (m *Filter) GetWheelchair() bool {
	if m != nil {
		return m.Wheelchair
	}
	return false
}

func (m *Filter) GetWindows() bool {
	if m != nil {
		return m.Windows
	}
	return false
}

type Capacity struct {
	Size                 int32      `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Comparison           Comparison `protobuf:"varint,2,opt,name=comparison,proto3,enum=search.Comparison" json:"comparison,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Capacity) Reset()         { *m = Capacity{} }
func (m *Capacity) String() string { return proto.CompactTextString(m) }
func (*Capacity) ProtoMessage()    {}
func (*Capacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{2}
}

func (m *Capacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Capacity.Unmarshal(m, b)
}
func (m *Capacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Capacity.Marshal(b, m, deterministic)
}
func (m *Capacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Capacity.Merge(m, src)
}
func (m *Capacity) XXX_Size() int {
	return xxx_messageInfo_Capacity.Size(m)
}
func (m *Capacity) XXX_DiscardUnknown() {
	xxx_messageInfo_Capacity.DiscardUnknown(m)
}

var xxx_messageInfo_Capacity proto.InternalMessageInfo

func (m *Capacity) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Capacity) GetComparison() Comparison {
	if m != nil {
		return m.Comparison
	}
	return Comparison_LESS_THAN
}

type FilterSearchResponse struct {
	Rooms                []*Room  `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterSearchResponse) Reset()         { *m = FilterSearchResponse{} }
func (m *FilterSearchResponse) String() string { return proto.CompactTextString(m) }
func (*FilterSearchResponse) ProtoMessage()    {}
func (*FilterSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{3}
}

func (m *FilterSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterSearchResponse.Unmarshal(m, b)
}
func (m *FilterSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterSearchResponse.Marshal(b, m, deterministic)
}
func (m *FilterSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterSearchResponse.Merge(m, src)
}
func (m *FilterSearchResponse) XXX_Size() int {
	return xxx_messageInfo_FilterSearchResponse.Size(m)
}
func (m *FilterSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FilterSearchResponse proto.InternalMessageInfo

func (m *FilterSearchResponse) GetRooms() []*Room {
	if m != nil {
		return m.Rooms
	}
	return nil
}

type Room struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Capacity             int64    `protobuf:"varint,2,opt,name=Capacity,proto3" json:"Capacity,omitempty"`
	RoomType             RoomType `protobuf:"varint,3,opt,name=RoomType,proto3,enum=search.RoomType" json:"RoomType,omitempty"`
	Wheelchair           bool     `protobuf:"varint,4,opt,name=Wheelchair,proto3" json:"Wheelchair,omitempty"`
	Photos               []string `protobuf:"bytes,5,rep,name=Photos,proto3" json:"Photos,omitempty"`
	Windows              bool     `protobuf:"varint,6,opt,name=Windows,proto3" json:"Windows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{4}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Room) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Room) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_ANY
}

func (m *Room) GetWheelchair() bool {
	if m != nil {
		return m.Wheelchair
	}
	return false
}

func (m *Room) GetPhotos() []string {
	if m != nil {
		return m.Photos
	}
	return nil
}

func (m *Room) GetWindows() bool {
	if m != nil {
		return m.Windows
	}
	return false
}

func init() {
	proto.RegisterEnum("search.Comparison", Comparison_name, Comparison_value)
	proto.RegisterEnum("search.RoomType", RoomType_name, RoomType_value)
	proto.RegisterType((*FilterSearchRequest)(nil), "search.FilterSearchRequest")
	proto.RegisterType((*Filter)(nil), "search.Filter")
	proto.RegisterType((*Capacity)(nil), "search.Capacity")
	proto.RegisterType((*FilterSearchResponse)(nil), "search.FilterSearchResponse")
	proto.RegisterType((*Room)(nil), "search.Room")
}

func init() { proto.RegisterFile("search.proto", fileDescriptor_453745cff914010e) }

var fileDescriptor_453745cff914010e = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xcb, 0x6e, 0xda, 0x40,
	0x14, 0xc5, 0x18, 0x1c, 0xb8, 0xa1, 0x74, 0x7a, 0xf3, 0x90, 0x93, 0x3e, 0x84, 0xbc, 0xa8, 0x50,
	0x14, 0x65, 0x41, 0x77, 0x95, 0xba, 0x98, 0xc2, 0x34, 0x41, 0x75, 0x4c, 0x7a, 0x3d, 0x34, 0xea,
	0xca, 0xa2, 0xd4, 0x15, 0x96, 0x12, 0x86, 0xda, 0x54, 0x28, 0xfd, 0x91, 0xee, 0xfa, 0x11, 0xfd,
	0xc2, 0xca, 0x63, 0x63, 0x9b, 0x2a, 0x3b, 0xce, 0x63, 0x98, 0x73, 0x8f, 0xe7, 0x42, 0x27, 0x09,
	0x67, 0xf1, 0x7c, 0x71, 0xb1, 0x8a, 0xd5, 0x5a, 0xa1, 0x95, 0x21, 0xe7, 0x1d, 0x1c, 0x7c, 0x88,
	0xee, 0xd6, 0x61, 0xec, 0x6b, 0x4c, 0xe1, 0x8f, 0x9f, 0x61, 0xb2, 0xc6, 0xd7, 0x60, 0x7d, 0xd7,
	0xb4, 0x6d, 0xf4, 0x8c, 0xfe, 0xfe, 0xa0, 0x7b, 0x91, 0x9f, 0xce, 0xcc, 0x94, 0xab, 0xce, 0x1f,
	0x03, 0xac, 0x8c, 0xc2, 0x73, 0x68, 0xcd, 0x67, 0xab, 0xd9, 0x3c, 0x5a, 0x3f, 0xe4, 0x87, 0xd8,
	0xf6, 0xd0, 0x30, 0xe7, 0xa9, 0x70, 0xa4, 0xee, 0x58, 0xa9, 0x7b, 0xf9, 0xb0, 0x0a, 0xed, 0x7a,
	0xcf, 0xe8, 0x77, 0x4b, 0x37, 0xe5, 0x3c, 0x15, 0x0e, 0x7c, 0x05, 0xb0, 0x59, 0x84, 0xe1, 0xdd,
	0x7c, 0x31, 0x8b, 0x62, 0xdb, 0xec, 0x19, 0xfd, 0x16, 0x55, 0x18, 0xb4, 0x61, 0x6f, 0x13, 0x2d,
	0xbf, 0xa9, 0x4d, 0x62, 0x37, 0xb4, 0xb8, 0x85, 0x0e, 0x41, 0x6b, 0x7b, 0x3b, 0x22, 0x34, 0x92,
	0xe8, 0x57, 0xa8, 0xd3, 0x35, 0x49, 0xff, 0xc6, 0x01, 0xc0, 0x5c, 0xdd, 0xaf, 0x66, 0x71, 0x94,
	0xa8, 0x65, 0x9e, 0x04, 0x8b, 0xdc, 0x85, 0x42, 0x15, 0x97, 0xf3, 0x16, 0x0e, 0x77, 0x3b, 0x4b,
	0x56, 0x6a, 0x99, 0x84, 0xe8, 0x40, 0x33, 0x4d, 0x9c, 0xd8, 0x46, 0xcf, 0xec, 0xef, 0x0f, 0x3a,
	0xd5, 0x81, 0x28, 0x93, 0x9c, 0xbf, 0x06, 0x34, 0x52, 0x8c, 0x5d, 0xa8, 0x8f, 0x47, 0x3a, 0x4a,
	0x9b, 0xea, 0xe3, 0x11, 0x9e, 0x96, 0x41, 0x75, 0x0c, 0x93, 0xca, 0xe0, 0xe7, 0xd0, 0xda, 0x96,
	0xa2, 0x87, 0x7f, 0xb4, 0x2c, 0xaa, 0x94, 0x75, 0x5b, 0x96, 0x95, 0xf5, 0x51, 0x61, 0xf0, 0x18,
	0xac, 0x9b, 0x85, 0x5a, 0xab, 0xc4, 0x6e, 0xf6, 0xcc, 0x7e, 0x9b, 0x72, 0x94, 0x96, 0x78, 0x9b,
	0x97, 0x68, 0x65, 0x25, 0xe6, 0xf0, 0x6c, 0x09, 0x50, 0x56, 0x81, 0x4f, 0xa0, 0xed, 0x0a, 0xdf,
	0x0f, 0xe4, 0x15, 0xf7, 0x58, 0x0d, 0x8f, 0x01, 0x0b, 0x18, 0x88, 0x4f, 0x53, 0xee, 0x06, 0x72,
	0xc2, 0x0c, 0xec, 0x40, 0xab, 0x40, 0x75, 0x3c, 0x81, 0xa3, 0x4b, 0x12, 0x5c, 0x0a, 0xfa, 0xcf,
	0x68, 0x22, 0x83, 0x4e, 0x55, 0x62, 0x8d, 0xb3, 0xdf, 0x46, 0x39, 0x30, 0xee, 0x81, 0xc9, 0xbd,
	0x2f, 0xac, 0x96, 0xde, 0x3b, 0x74, 0xb9, 0xef, 0xd3, 0x64, 0x72, 0xcd, 0x0c, 0x3c, 0x80, 0xa7,
	0xae, 0x18, 0xca, 0x29, 0x89, 0x40, 0x5e, 0x09, 0x2e, 0x49, 0xb0, 0x3a, 0x1e, 0xc1, 0xb3, 0x91,
	0xb8, 0xe1, 0x24, 0xaf, 0x85, 0x27, 0xb9, 0x1b, 0x68, 0xaf, 0x89, 0x87, 0xc0, 0x76, 0x68, 0x97,
	0xbf, 0x67, 0x0d, 0x7c, 0x09, 0x27, 0x7c, 0x28, 0xc7, 0x9f, 0x45, 0xe0, 0x0a, 0x4e, 0xde, 0xd8,
	0xbb, 0x0c, 0xca, 0x0b, 0x9a, 0x88, 0xd0, 0x95, 0xc2, 0x97, 0x9a, 0x16, 0x5e, 0xfa, 0xff, 0xd6,
	0x60, 0x0a, 0x56, 0xf6, 0xd1, 0xf1, 0x23, 0x74, 0xaa, 0x8f, 0x00, 0x9f, 0xef, 0x6e, 0xc8, 0xce,
	0x3a, 0x9d, 0xbe, 0x78, 0x5c, 0xcc, 0xde, 0x8d, 0x53, 0xfb, 0x6a, 0xe9, 0xa5, 0x7c, 0xf3, 0x2f,
	0x00, 0x00, 0xff, 0xff, 0x6a, 0xf5, 0x97, 0x0b, 0xa4, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SearchClient is the client API for Search service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchClient interface {
	FilterSearch(ctx context.Context, in *FilterSearchRequest, opts ...grpc.CallOption) (*FilterSearchResponse, error)
}

type searchClient struct {
	cc *grpc.ClientConn
}

func NewSearchClient(cc *grpc.ClientConn) SearchClient {
	return &searchClient{cc}
}

func (c *searchClient) FilterSearch(ctx context.Context, in *FilterSearchRequest, opts ...grpc.CallOption) (*FilterSearchResponse, error) {
	out := new(FilterSearchResponse)
	err := c.cc.Invoke(ctx, "/search.Search/FilterSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServer is the server API for Search service.
type SearchServer interface {
	FilterSearch(context.Context, *FilterSearchRequest) (*FilterSearchResponse, error)
}

// UnimplementedSearchServer can be embedded to have forward compatible implementations.
type UnimplementedSearchServer struct {
}

func (*UnimplementedSearchServer) FilterSearch(ctx context.Context, req *FilterSearchRequest) (*FilterSearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FilterSearch not implemented")
}

func RegisterSearchServer(s *grpc.Server, srv SearchServer) {
	s.RegisterService(&_Search_serviceDesc, srv)
}

func _Search_FilterSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServer).FilterSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.Search/FilterSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServer).FilterSearch(ctx, req.(*FilterSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Search_serviceDesc = grpc.ServiceDesc{
	ServiceName: "search.Search",
	HandlerType: (*SearchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FilterSearch",
			Handler:    _Search_FilterSearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}
